syntax = "proto3";

package api.control_net;

import "google/api/annotations.proto";

option go_package = "c3h/api/control_network;control_net";
option java_multiple_files = true;
option java_package = "api.control_network";

service ControlNet {

  rpc GetR401APC (GetR401Request) returns (GetR401Reply) {
    option (google.api.http) = {
      get: "/c3h/control-net/r401-apc"
    };
  }

  rpc GetOperationVars (GetOperationVarsRequest) returns (GetOperationVarsReply) {
    option (google.api.http) = {
      get: "/c3h/control-net/operation-vars"
    };
  }

  rpc GetReactorPerformance (GetReactorPerformanceRequest) returns (GetReactorPerformanceReply) {
    option (google.api.http) = {
      get: "/c3h/control-net/reactor-performance"
    };
  }

  rpc SetR401APC (SetR401APCRequest) returns (SetR401APCReply) {
    option (google.api.http) = {
      post: "/c3h/control-net/r401-apc"
      body: "*"
    };
  }

  rpc SetOperationVars (SetOperationVarsRequest) returns (SetOperationVarsReply) {
    option (google.api.http) = {
      post: "/c3h/control-net/operation-vars"
      body: "*"
    };
  }

  rpc ConfirmReactorPerf (ConfirmReactorPerfRequest) returns (ConfirmReactorPerfReply) {
    option (google.api.http) = {
      post: "/c3h/control-net/reactor-perf"
      body: "*"
    };
  }

  rpc GetReactorPerf (GetReactorPerfRequest) returns (GetReactorPerfReply) {
    option (google.api.http) = {
      get: "/c3h/control-net/reactor-perf"
    };
  }

}

message GetR401Request {}

message GetR401Reply {
  int32        code = 1;
  VarReplyData data = 2;
}

message R401Info {

}

message GetOperationVarsRequest {}

message GetOperationVarsReply {
  int32        code = 1;
  VarReplyData data = 2;
}

message GetReactorPerformanceRequest {}

message GetReactorPerformanceReply {
  int32        code = 1;
  VarReplyData data = 2;
}

message SetR401APCRequest {
  string name      = 1;
  double set_value = 2;
}
message SetR401APCReply {
  int32 code = 1;
}

message SetOperationVarsRequest {
  string rcy_material_flow    = 1;
  string c_h_ration           = 2;
  string entrance_temperature = 3;
  string h_flow               = 4;
}
message SetOperationVarsReply {}

message ConfirmReactorPerfRequest {}
message ConfirmReactorPerfReply {}

message GetReactorPerfRequest {}
message GetReactorPerfReply {
  string MAPD = 1;
  string c3h6 = 2;
  string c3h8 = 3;
}


message VarReplyData {
  repeated VarDetail list = 1;
}

message VarDetail {
  string name          = 1;
  string desc          = 2;
  double real_value    = 3;
  double set_value     = 4;
  double low_limit     = 5;
  double high_limit    = 6;
  string unit          = 7;
  bool   edit_able     = 8;
  bool   is_switch     = 9;
  bool   switch_status = 10;
}