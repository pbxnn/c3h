syntax = "proto3";

package api.control_net;

import "google/api/annotations.proto";

option go_package = "c3h/api/control_network;control_net";
option java_multiple_files = true;
option java_package = "api.control_network";

service ControlNet {

  rpc SetR401APC (SetR401APCRequest) returns (SetR401APCReply) {
    option (google.api.http) = {
      post: "/c3h/control-net/r401-apc"
      body: "*"
    };
  }

  rpc SetOperationVars (SetOperationVarsRequest) returns (SetOperationVarsReply) {
    option (google.api.http) = {
      post: "/c3h/control-net/operation-vars"
      body: "*"
    };
  }

  rpc ConfirmReactorPerf (ConfirmReactorPerfRequest) returns (ConfirmReactorPerfReply) {
    option (google.api.http) = {
      post: "/c3h/control-net/reactor-perf"
      body: "*"
    };
  }

  rpc GetReactorPerf (GetReactorPerfRequest) returns (GetReactorPerfReply) {
    option (google.api.http) = {
      get: "/c3h/control-net/reactor-perf"
    };
  }

}

message SetR401APCRequest {
  int32 MAPD_control_mode   = 1;
  int32 APC_switch          = 2;
  int32 APC_write           = 3;
  int32 communication_light = 4;

}
message SetR401APCReply {}

message SetOperationVarsRequest {
  string rcy_material_flow    = 1;
  string c_h_ration           = 2;
  string entrance_temperature = 3;
  string h_flow               = 4;
}
message SetOperationVarsReply {}

message ConfirmReactorPerfRequest {}
message ConfirmReactorPerfReply {}

message GetReactorPerfRequest {}
message GetReactorPerfReply {
  string MAPD = 1;
  string c3h6 = 2;
  string c3h8 = 3;
}
