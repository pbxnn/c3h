syntax = "proto3";

package api.r401s;

import "google/api/annotations.proto";

option go_package = "c3h/api/r401s;r401s";

service R401S {

  rpc GetSwitchInfo (GetSwitchInfoRequest) returns (VarListReply) {
    option (google.api.http) = {
      get: "/c3h/r401s/switch"
    };
  }

  rpc SetSwitchInfo (SetSwitchInfoRequest) returns (VarReply) {
    option (google.api.http) = {
      post: "/c3h/r401s/switch",
      body: "*"
    };
  }

  rpc Reset (ResetRequest) returns (VarReply) {
    option (google.api.http) = {
      post: "/c3h/r401s/reset",
      body: "*"
    };
  }

  rpc GetOperationVars (GetOperationVarsRequest) returns (VarListReply) {
    option (google.api.http) = {
      get: "/c3h/r401s/operation-vars"
    };
  }

  rpc GetStatusVars (GetStatusVarsRequest) returns (VarListReply) {
    option (google.api.http) = {
      get: "/c3h/r401s/status-vars"
    };
  }

  rpc GetConfoundingVars (GetConfoundingVarsRequest) returns (VarListReply) {
    option (google.api.http) = {
      get: "/c3h/r401s/confounding-vars"
    };
  }

  rpc GetReactorPerformance (GetReactorPerformanceRequest) returns (VarListReply) {
    option (google.api.http) = {
      get: "/c3h/r401s/reactor-performance"
    };
  }

  rpc ConfirmReactorPerf (ConfirmReactorPerfRequest) returns (ConfirmReactorPerfReply) {
    option (google.api.http) = {
      post: "/c3h/r401s/reactor-perf"
      body: "*"
    };
  }
}

message GetSwitchInfoRequest {}

message GetOperationVarsRequest {}

message GetStatusVarsRequest {}

message GetConfoundingVarsRequest {}

message GetReactorPerformanceRequest {}

message VarListReply {
  int32        code = 1;
  VarReplyData data = 2;
}

message SetSwitchInfoRequest{
  string switch_name   = 1;
  string switch_key    = 2;
  string switch_status = 3;
}

message ResetRequest{
  string switch_name   = 1;
  string switch_key    = 2;
  string switch_status = 3;
}

message SetR401APCRequest {
  string name      = 1;
  double set_value = 2;
}
message SetR401APCReply {
  int32 code = 1;
}

message SetOperationVarsRequest {
  string rcy_material_flow    = 1;
  string c_h_ration           = 2;
  string entrance_temperature = 3;
  string h_flow               = 4;
}
message SetOperationVarsReply {}

message ConfirmReactorPerfRequest {}
message ConfirmReactorPerfReply {}

message GetReactorPerfRequest {}
message GetReactorPerfReply {
  string MAPD = 1;
  string c3h6 = 2;
  string c3h8 = 3;
}

message VarReply{
  int32     code = 1;
  VarDetail data = 2;
}


message ResetReply{
  int32     code = 1;
  VarDetail data = 2;
}

message VarReplyData {
  repeated VarDetail list = 1;
}

message VarDetail {
  string         name       = 1;
  string         key        = 2;
  string         desc       = 3;
  int32          type       = 4;
  double         real_value = 5;
  double         set_value  = 6;
  double         calc_value = 7;
  double         low_limit  = 8;
  double         high_limit = 9;
  string         unit       = 10;
  bool           edit_able  = 11;
  VarDetailExtra extra      = 12;
}

message VarDetailExtra {
  bool  edit_able            = 1;
  bool  reset_able           = 2;
  bool  has_control_switch   = 3;
  int32 control_swith_status = 4;
}