// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.1
// source: r401s/r401s.proto

package r401s

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAPCControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAPCControlRequest) Reset() {
	*x = GetAPCControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPCControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPCControlRequest) ProtoMessage() {}

func (x *GetAPCControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPCControlRequest.ProtoReflect.Descriptor instead.
func (*GetAPCControlRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{0}
}

type GetOperationVarsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOperationVarsRequest) Reset() {
	*x = GetOperationVarsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationVarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationVarsRequest) ProtoMessage() {}

func (x *GetOperationVarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationVarsRequest.ProtoReflect.Descriptor instead.
func (*GetOperationVarsRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{1}
}

type GetStatusVarsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusVarsRequest) Reset() {
	*x = GetStatusVarsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusVarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusVarsRequest) ProtoMessage() {}

func (x *GetStatusVarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusVarsRequest.ProtoReflect.Descriptor instead.
func (*GetStatusVarsRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{2}
}

type GetConfoundingVarsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfoundingVarsRequest) Reset() {
	*x = GetConfoundingVarsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfoundingVarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfoundingVarsRequest) ProtoMessage() {}

func (x *GetConfoundingVarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfoundingVarsRequest.ProtoReflect.Descriptor instead.
func (*GetConfoundingVarsRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{3}
}

type GetReactorPerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetReactorPerformanceRequest) Reset() {
	*x = GetReactorPerformanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReactorPerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReactorPerformanceRequest) ProtoMessage() {}

func (x *GetReactorPerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReactorPerformanceRequest.ProtoReflect.Descriptor instead.
func (*GetReactorPerformanceRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{4}
}

type VarListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data *VarReplyData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VarListReply) Reset() {
	*x = VarListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarListReply) ProtoMessage() {}

func (x *VarListReply) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarListReply.ProtoReflect.Descriptor instead.
func (*VarListReply) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{5}
}

func (x *VarListReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VarListReply) GetData() *VarReplyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetControlSwitchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Status float64 `protobuf:"fixed64,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetControlSwitchRequest) Reset() {
	*x = SetControlSwitchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetControlSwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetControlSwitchRequest) ProtoMessage() {}

func (x *SetControlSwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetControlSwitchRequest.ProtoReflect.Descriptor instead.
func (*SetControlSwitchRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{6}
}

func (x *SetControlSwitchRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetControlSwitchRequest) GetStatus() float64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SetAPCControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Type     int32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	SetValue float64 `protobuf:"fixed64,3,opt,name=set_value,json=setValue,proto3" json:"set_value,omitempty"`
}

func (x *SetAPCControlRequest) Reset() {
	*x = SetAPCControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAPCControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAPCControlRequest) ProtoMessage() {}

func (x *SetAPCControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAPCControlRequest.ProtoReflect.Descriptor instead.
func (*SetAPCControlRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{7}
}

func (x *SetAPCControlRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetAPCControlRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SetAPCControlRequest) GetSetValue() float64 {
	if x != nil {
		return x.SetValue
	}
	return 0
}

type ResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{8}
}

func (x *ResetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type SetR401APCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SetValue float64 `protobuf:"fixed64,2,opt,name=set_value,json=setValue,proto3" json:"set_value,omitempty"`
}

func (x *SetR401APCRequest) Reset() {
	*x = SetR401APCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetR401APCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetR401APCRequest) ProtoMessage() {}

func (x *SetR401APCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetR401APCRequest.ProtoReflect.Descriptor instead.
func (*SetR401APCRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{9}
}

func (x *SetR401APCRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetR401APCRequest) GetSetValue() float64 {
	if x != nil {
		return x.SetValue
	}
	return 0
}

type SetR401APCReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SetR401APCReply) Reset() {
	*x = SetR401APCReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetR401APCReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetR401APCReply) ProtoMessage() {}

func (x *SetR401APCReply) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetR401APCReply.ProtoReflect.Descriptor instead.
func (*SetR401APCReply) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{10}
}

func (x *SetR401APCReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SetOperationVarsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RcyMaterialFlow     string `protobuf:"bytes,1,opt,name=rcy_material_flow,json=rcyMaterialFlow,proto3" json:"rcy_material_flow,omitempty"`
	CHRation            string `protobuf:"bytes,2,opt,name=c_h_ration,json=cHRation,proto3" json:"c_h_ration,omitempty"`
	EntranceTemperature string `protobuf:"bytes,3,opt,name=entrance_temperature,json=entranceTemperature,proto3" json:"entrance_temperature,omitempty"`
	HFlow               string `protobuf:"bytes,4,opt,name=h_flow,json=hFlow,proto3" json:"h_flow,omitempty"`
}

func (x *SetOperationVarsRequest) Reset() {
	*x = SetOperationVarsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOperationVarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOperationVarsRequest) ProtoMessage() {}

func (x *SetOperationVarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOperationVarsRequest.ProtoReflect.Descriptor instead.
func (*SetOperationVarsRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{11}
}

func (x *SetOperationVarsRequest) GetRcyMaterialFlow() string {
	if x != nil {
		return x.RcyMaterialFlow
	}
	return ""
}

func (x *SetOperationVarsRequest) GetCHRation() string {
	if x != nil {
		return x.CHRation
	}
	return ""
}

func (x *SetOperationVarsRequest) GetEntranceTemperature() string {
	if x != nil {
		return x.EntranceTemperature
	}
	return ""
}

func (x *SetOperationVarsRequest) GetHFlow() string {
	if x != nil {
		return x.HFlow
	}
	return ""
}

type SetOperationVarsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetOperationVarsReply) Reset() {
	*x = SetOperationVarsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOperationVarsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOperationVarsReply) ProtoMessage() {}

func (x *SetOperationVarsReply) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOperationVarsReply.ProtoReflect.Descriptor instead.
func (*SetOperationVarsReply) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{12}
}

type ConfirmReactorPerfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfirmData *structpb.Struct `protobuf:"bytes,1,opt,name=confirm_data,json=confirmData,proto3" json:"confirm_data,omitempty"`
}

func (x *ConfirmReactorPerfRequest) Reset() {
	*x = ConfirmReactorPerfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmReactorPerfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmReactorPerfRequest) ProtoMessage() {}

func (x *ConfirmReactorPerfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmReactorPerfRequest.ProtoReflect.Descriptor instead.
func (*ConfirmReactorPerfRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{13}
}

func (x *ConfirmReactorPerfRequest) GetConfirmData() *structpb.Struct {
	if x != nil {
		return x.ConfirmData
	}
	return nil
}

type GetReactorPerfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetReactorPerfRequest) Reset() {
	*x = GetReactorPerfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReactorPerfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReactorPerfRequest) ProtoMessage() {}

func (x *GetReactorPerfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReactorPerfRequest.ProtoReflect.Descriptor instead.
func (*GetReactorPerfRequest) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{14}
}

type GetReactorPerfReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MAPD string `protobuf:"bytes,1,opt,name=MAPD,proto3" json:"MAPD,omitempty"`
	C3H6 string `protobuf:"bytes,2,opt,name=c3h6,proto3" json:"c3h6,omitempty"`
	C3H8 string `protobuf:"bytes,3,opt,name=c3h8,proto3" json:"c3h8,omitempty"`
}

func (x *GetReactorPerfReply) Reset() {
	*x = GetReactorPerfReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReactorPerfReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReactorPerfReply) ProtoMessage() {}

func (x *GetReactorPerfReply) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReactorPerfReply.ProtoReflect.Descriptor instead.
func (*GetReactorPerfReply) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{15}
}

func (x *GetReactorPerfReply) GetMAPD() string {
	if x != nil {
		return x.MAPD
	}
	return ""
}

func (x *GetReactorPerfReply) GetC3H6() string {
	if x != nil {
		return x.C3H6
	}
	return ""
}

func (x *GetReactorPerfReply) GetC3H8() string {
	if x != nil {
		return x.C3H8
	}
	return ""
}

type VarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data *VarDetail `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VarReply) Reset() {
	*x = VarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarReply) ProtoMessage() {}

func (x *VarReply) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarReply.ProtoReflect.Descriptor instead.
func (*VarReply) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{16}
}

func (x *VarReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VarReply) GetData() *VarDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data *VarDetail `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ResetReply) Reset() {
	*x = ResetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetReply) ProtoMessage() {}

func (x *ResetReply) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetReply.ProtoReflect.Descriptor instead.
func (*ResetReply) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{17}
}

func (x *ResetReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResetReply) GetData() *VarDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type VarReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*VarDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *VarReplyData) Reset() {
	*x = VarReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarReplyData) ProtoMessage() {}

func (x *VarReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarReplyData.ProtoReflect.Descriptor instead.
func (*VarReplyData) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{18}
}

func (x *VarReplyData) GetList() []*VarDetail {
	if x != nil {
		return x.List
	}
	return nil
}

type VarDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key       string          `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Desc      string          `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Type      int32           `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	RealValue float64         `protobuf:"fixed64,5,opt,name=real_value,json=realValue,proto3" json:"real_value,omitempty"`
	SetValue  float64         `protobuf:"fixed64,6,opt,name=set_value,json=setValue,proto3" json:"set_value,omitempty"`
	CalcValue float64         `protobuf:"fixed64,7,opt,name=calc_value,json=calcValue,proto3" json:"calc_value,omitempty"`
	LowLimit  float64         `protobuf:"fixed64,8,opt,name=low_limit,json=lowLimit,proto3" json:"low_limit,omitempty"`
	HighLimit float64         `protobuf:"fixed64,9,opt,name=high_limit,json=highLimit,proto3" json:"high_limit,omitempty"`
	Unit      string          `protobuf:"bytes,10,opt,name=unit,proto3" json:"unit,omitempty"`
	EditAble  bool            `protobuf:"varint,11,opt,name=edit_able,json=editAble,proto3" json:"edit_able,omitempty"`
	Extra     *VarDetailExtra `protobuf:"bytes,12,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *VarDetail) Reset() {
	*x = VarDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarDetail) ProtoMessage() {}

func (x *VarDetail) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarDetail.ProtoReflect.Descriptor instead.
func (*VarDetail) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{19}
}

func (x *VarDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VarDetail) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *VarDetail) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *VarDetail) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VarDetail) GetRealValue() float64 {
	if x != nil {
		return x.RealValue
	}
	return 0
}

func (x *VarDetail) GetSetValue() float64 {
	if x != nil {
		return x.SetValue
	}
	return 0
}

func (x *VarDetail) GetCalcValue() float64 {
	if x != nil {
		return x.CalcValue
	}
	return 0
}

func (x *VarDetail) GetLowLimit() float64 {
	if x != nil {
		return x.LowLimit
	}
	return 0
}

func (x *VarDetail) GetHighLimit() float64 {
	if x != nil {
		return x.HighLimit
	}
	return 0
}

func (x *VarDetail) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *VarDetail) GetEditAble() bool {
	if x != nil {
		return x.EditAble
	}
	return false
}

func (x *VarDetail) GetExtra() *VarDetailExtra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type VarDetailExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EditAble            bool  `protobuf:"varint,1,opt,name=edit_able,json=editAble,proto3" json:"edit_able,omitempty"`
	ResetAble           bool  `protobuf:"varint,2,opt,name=reset_able,json=resetAble,proto3" json:"reset_able,omitempty"`
	HasControlSwitch    bool  `protobuf:"varint,3,opt,name=has_control_switch,json=hasControlSwitch,proto3" json:"has_control_switch,omitempty"`
	ControlSwitchStatus int32 `protobuf:"varint,4,opt,name=control_switch_status,json=controlSwitchStatus,proto3" json:"control_switch_status,omitempty"`
}

func (x *VarDetailExtra) Reset() {
	*x = VarDetailExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_r401s_r401s_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarDetailExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarDetailExtra) ProtoMessage() {}

func (x *VarDetailExtra) ProtoReflect() protoreflect.Message {
	mi := &file_r401s_r401s_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarDetailExtra.ProtoReflect.Descriptor instead.
func (*VarDetailExtra) Descriptor() ([]byte, []int) {
	return file_r401s_r401s_proto_rawDescGZIP(), []int{20}
}

func (x *VarDetailExtra) GetEditAble() bool {
	if x != nil {
		return x.EditAble
	}
	return false
}

func (x *VarDetailExtra) GetResetAble() bool {
	if x != nil {
		return x.ResetAble
	}
	return false
}

func (x *VarDetailExtra) GetHasControlSwitch() bool {
	if x != nil {
		return x.HasControlSwitch
	}
	return false
}

func (x *VarDetailExtra) GetControlSwitchStatus() int32 {
	if x != nil {
		return x.ControlSwitchStatus
	}
	return 0
}

var File_r401s_r401s_proto protoreflect.FileDescriptor

var file_r401s_r401s_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2f, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x50, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4f, 0x0a, 0x0c, 0x56, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73,
	0x2e, 0x56, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x59, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x41,
	0x50, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x65, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x44, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x52, 0x34, 0x30, 0x31,
	0x41, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x53,
	0x65, 0x74, 0x52, 0x34, 0x30, 0x31, 0x41, 0x50, 0x43, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x72, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x63, 0x79, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x0a, 0x63, 0x5f,
	0x68, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x48, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x68,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x46, 0x6c,
	0x6f, 0x77, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x57, 0x0a, 0x19, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72,
	0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x51, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x41, 0x50, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4d, 0x41, 0x50, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x33, 0x68, 0x36,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x33, 0x68, 0x36, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x33, 0x68, 0x38, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x33, 0x68, 0x38,
	0x22, 0x48, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x0c, 0x56, 0x61, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73,
	0x2e, 0x56, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xd2, 0x02, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x63,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x61,
	0x6c, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74,
	0x41, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e,
	0x56, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74,
	0x5f, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x64, 0x69,
	0x74, 0x41, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x41, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xf9, 0x07, 0x0a, 0x05, 0x52, 0x34, 0x30, 0x31, 0x53,
	0x12, 0x69, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x50, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x50, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x56,
	0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x63, 0x33, 0x68, 0x2f, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2f,
	0x61, 0x70, 0x63, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x68, 0x0a, 0x0d, 0x53,
	0x65, 0x74, 0x41, 0x50, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x50, 0x43, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f,
	0x63, 0x33, 0x68, 0x2f, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2f, 0x61, 0x70, 0x63, 0x2d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x71, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f,
	0x63, 0x33, 0x68, 0x2f, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2d, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x52, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x63, 0x33, 0x68,
	0x2f, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x72, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x73,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73,
	0x2e, 0x56, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x63, 0x33, 0x68, 0x2f, 0x72, 0x34, 0x30, 0x31,
	0x73, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x76, 0x61, 0x72, 0x73,
	0x12, 0x69, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x72,
	0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x56,
	0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x63, 0x33, 0x68, 0x2f, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2d, 0x76, 0x61, 0x72, 0x73, 0x12, 0x78, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72,
	0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34,
	0x30, 0x31, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x63, 0x33, 0x68, 0x2f, 0x72,
	0x34, 0x30, 0x31, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x2d, 0x76, 0x61, 0x72, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x34, 0x30, 0x31, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x63, 0x33, 0x68, 0x2f,
	0x72, 0x34, 0x30, 0x31, 0x73, 0x2f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x70, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x12, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x12,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x34, 0x30, 0x31,
	0x73, 0x2e, 0x56, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x63, 0x33, 0x68, 0x2f,
	0x72, 0x34, 0x30, 0x31, 0x73, 0x2f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x70, 0x65,
	0x72, 0x66, 0x42, 0x15, 0x5a, 0x13, 0x63, 0x33, 0x68, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x34,
	0x30, 0x31, 0x73, 0x3b, 0x72, 0x34, 0x30, 0x31, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_r401s_r401s_proto_rawDescOnce sync.Once
	file_r401s_r401s_proto_rawDescData = file_r401s_r401s_proto_rawDesc
)

func file_r401s_r401s_proto_rawDescGZIP() []byte {
	file_r401s_r401s_proto_rawDescOnce.Do(func() {
		file_r401s_r401s_proto_rawDescData = protoimpl.X.CompressGZIP(file_r401s_r401s_proto_rawDescData)
	})
	return file_r401s_r401s_proto_rawDescData
}

var file_r401s_r401s_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_r401s_r401s_proto_goTypes = []interface{}{
	(*GetAPCControlRequest)(nil),         // 0: api.r401s.GetAPCControlRequest
	(*GetOperationVarsRequest)(nil),      // 1: api.r401s.GetOperationVarsRequest
	(*GetStatusVarsRequest)(nil),         // 2: api.r401s.GetStatusVarsRequest
	(*GetConfoundingVarsRequest)(nil),    // 3: api.r401s.GetConfoundingVarsRequest
	(*GetReactorPerformanceRequest)(nil), // 4: api.r401s.GetReactorPerformanceRequest
	(*VarListReply)(nil),                 // 5: api.r401s.VarListReply
	(*SetControlSwitchRequest)(nil),      // 6: api.r401s.SetControlSwitchRequest
	(*SetAPCControlRequest)(nil),         // 7: api.r401s.SetAPCControlRequest
	(*ResetRequest)(nil),                 // 8: api.r401s.ResetRequest
	(*SetR401APCRequest)(nil),            // 9: api.r401s.SetR401APCRequest
	(*SetR401APCReply)(nil),              // 10: api.r401s.SetR401APCReply
	(*SetOperationVarsRequest)(nil),      // 11: api.r401s.SetOperationVarsRequest
	(*SetOperationVarsReply)(nil),        // 12: api.r401s.SetOperationVarsReply
	(*ConfirmReactorPerfRequest)(nil),    // 13: api.r401s.ConfirmReactorPerfRequest
	(*GetReactorPerfRequest)(nil),        // 14: api.r401s.GetReactorPerfRequest
	(*GetReactorPerfReply)(nil),          // 15: api.r401s.GetReactorPerfReply
	(*VarReply)(nil),                     // 16: api.r401s.VarReply
	(*ResetReply)(nil),                   // 17: api.r401s.ResetReply
	(*VarReplyData)(nil),                 // 18: api.r401s.VarReplyData
	(*VarDetail)(nil),                    // 19: api.r401s.VarDetail
	(*VarDetailExtra)(nil),               // 20: api.r401s.VarDetailExtra
	(*structpb.Struct)(nil),              // 21: google.protobuf.Struct
}
var file_r401s_r401s_proto_depIdxs = []int32{
	18, // 0: api.r401s.VarListReply.data:type_name -> api.r401s.VarReplyData
	21, // 1: api.r401s.ConfirmReactorPerfRequest.confirm_data:type_name -> google.protobuf.Struct
	19, // 2: api.r401s.VarReply.data:type_name -> api.r401s.VarDetail
	19, // 3: api.r401s.ResetReply.data:type_name -> api.r401s.VarDetail
	19, // 4: api.r401s.VarReplyData.list:type_name -> api.r401s.VarDetail
	20, // 5: api.r401s.VarDetail.extra:type_name -> api.r401s.VarDetailExtra
	0,  // 6: api.r401s.R401S.GetAPCControl:input_type -> api.r401s.GetAPCControlRequest
	7,  // 7: api.r401s.R401S.SetAPCControl:input_type -> api.r401s.SetAPCControlRequest
	6,  // 8: api.r401s.R401S.SetControlSwitch:input_type -> api.r401s.SetControlSwitchRequest
	8,  // 9: api.r401s.R401S.Reset:input_type -> api.r401s.ResetRequest
	1,  // 10: api.r401s.R401S.GetOperationVars:input_type -> api.r401s.GetOperationVarsRequest
	2,  // 11: api.r401s.R401S.GetStatusVars:input_type -> api.r401s.GetStatusVarsRequest
	3,  // 12: api.r401s.R401S.GetConfoundingVars:input_type -> api.r401s.GetConfoundingVarsRequest
	4,  // 13: api.r401s.R401S.GetReactorPerformance:input_type -> api.r401s.GetReactorPerformanceRequest
	13, // 14: api.r401s.R401S.ConfirmReactorPerf:input_type -> api.r401s.ConfirmReactorPerfRequest
	5,  // 15: api.r401s.R401S.GetAPCControl:output_type -> api.r401s.VarListReply
	16, // 16: api.r401s.R401S.SetAPCControl:output_type -> api.r401s.VarReply
	16, // 17: api.r401s.R401S.SetControlSwitch:output_type -> api.r401s.VarReply
	16, // 18: api.r401s.R401S.Reset:output_type -> api.r401s.VarReply
	5,  // 19: api.r401s.R401S.GetOperationVars:output_type -> api.r401s.VarListReply
	5,  // 20: api.r401s.R401S.GetStatusVars:output_type -> api.r401s.VarListReply
	5,  // 21: api.r401s.R401S.GetConfoundingVars:output_type -> api.r401s.VarListReply
	5,  // 22: api.r401s.R401S.GetReactorPerformance:output_type -> api.r401s.VarListReply
	5,  // 23: api.r401s.R401S.ConfirmReactorPerf:output_type -> api.r401s.VarListReply
	15, // [15:24] is the sub-list for method output_type
	6,  // [6:15] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_r401s_r401s_proto_init() }
func file_r401s_r401s_proto_init() {
	if File_r401s_r401s_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_r401s_r401s_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAPCControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationVarsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusVarsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfoundingVarsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReactorPerformanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetControlSwitchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAPCControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetR401APCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetR401APCReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOperationVarsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOperationVarsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmReactorPerfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReactorPerfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReactorPerfReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_r401s_r401s_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarDetailExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_r401s_r401s_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_r401s_r401s_proto_goTypes,
		DependencyIndexes: file_r401s_r401s_proto_depIdxs,
		MessageInfos:      file_r401s_r401s_proto_msgTypes,
	}.Build()
	File_r401s_r401s_proto = out.File
	file_r401s_r401s_proto_rawDesc = nil
	file_r401s_r401s_proto_goTypes = nil
	file_r401s_r401s_proto_depIdxs = nil
}
