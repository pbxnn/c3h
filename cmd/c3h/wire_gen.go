// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"c3h/internal/biz"
	"c3h/internal/conf"
	"c3h/internal/data"
	"c3h/internal/server"
	"c3h/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(bootstrap *conf.Bootstrap, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	db := data.NewDB(confData, logger)
	controlNetRepo := data.NewControlNetRepo(logger)
	controlNetUsecase := biz.NewControlNetUsecase(controlNetRepo, logger)
	controlNetService := service.NewControlNetService(controlNetUsecase, logger)
	productNetRepo := data.NewProductNetRepo(logger)
	productNetUsecase := biz.NewProductNetUsecase(productNetRepo, logger)
	productNetService := service.NewProductNetService(productNetUsecase, logger)
	httpServer := server.NewHTTPServer(bootstrap, db, controlNetService, productNetService, logger)
	app := newApp(logger, httpServer)
	return app, func() {
	}, nil
}
